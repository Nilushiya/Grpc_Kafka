syntax = 'proto3';

package stocktrading;
option  java_multiple_files=true;
option java_package="com.javatechie.grpc";
option  java_outer_classname="StockTradingProto";

service StokeTradingService{
  // UNARY - RPC -> get current stock price
  rpc getStokePrice(StokeRequest) returns (StokeResponse);

  //server streaming
  rpc subscribeStockPrice(StokeRequest) returns (stream StokeResponse);

  //Client streaming - place multiple stock orders
  rpc bulkStockOrder(stream StockOrder) returns (OrderSummary);

  //Bidirectional streaming - live trading.
  rpc liveTrading(stream StockOrder) returns (stream TradeStatus);
}

message StokeRequest{
  string stock_symbol = 1;
}

message StokeResponse{
  string stock_symbol = 1;
  double price = 2;
  string timestamp = 3;
}

message StockOrder{
  string order_id=1;
  string stock_symbol=2;
  int32 quantity=3;
  double price=4;
  string order_type=5;// BUY or SELL
}

message OrderSummary{
  int32  total_orders=1;
  double total_amount=2;
  int32 success_count=3;
}

message TradeStatus {
  string order_id = 1;
  string status = 2; // e.g., "EXECUTED", "FAILED", "PENDING"
  string message = 3; // reason if failed or success message
  string timestamp = 4;
}